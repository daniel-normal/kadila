// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kadila.Data;

#nullable disable

namespace kadila.Migrations
{
    [DbContext(typeof(DotnetContext))]
    [Migration("20231205045517_AddResetTokenToUser")]
    partial class AddResetTokenToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("kadila.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Topic")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("kadila.Models.Customer", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("apellido")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Direccion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<uint?>("SaldoDeuda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("saldo_deuda")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("telefono")
                        .HasDefaultValueSql("''");

                    b.Property<string>("TipoCliente")
                        .HasColumnType("enum('Persona','Empresa')")
                        .HasColumnName("tipo_cliente");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("customers", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Debt", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<ulong>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("cliente_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("enum('Pendiente','Pagado')")
                        .HasColumnName("estado");

                    b.Property<DateOnly?>("FechaCreacion")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateOnly?>("FechaLimite")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("fecha_limite");

                    b.Property<uint?>("Monto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("monto")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ClienteId" }, "debts_cliente_id_foreign");

                    b.ToTable("debts", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Lot", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<uint?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("cantidad")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<uint?>("PrecioActual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("precio_actual")
                        .HasDefaultValueSql("'12'");

                    b.Property<ulong>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("producto_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductoId" }, "lots_producto_id_foreign");

                    b.ToTable("lots", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.PaymentHistory", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<ulong>("DeudaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("deuda_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateOnly?>("FechaPago")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("fecha_pago");

                    b.Property<uint?>("Monto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("monto")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DeudaId" }, "payment_histories_deuda_id_foreign");

                    b.ToTable("payment_histories", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Product", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Descripcion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<uint?>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("precio")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("products", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Role", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("GuardName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("guard_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name", "GuardName" }, "roles_name_guard_name_unique")
                        .IsUnique();

                    b.ToTable("roles", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Sale", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<ulong>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("cliente_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<ulong>("DeudaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("deuda_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<ulong>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("empleado_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateOnly?>("FechaVenta")
                        .HasColumnType("date")
                        .HasColumnName("fecha_venta");

                    b.Property<string>("TipoVenta")
                        .HasMaxLength(50)
                        .HasColumnType("enum('Contado','Cuotas')")
                        .HasColumnName("tipo_venta");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ClienteId" }, "sales_cliente_id_foreign");

                    b.HasIndex(new[] { "DeudaId" }, "sales_deuda_id_foreign");

                    b.HasIndex(new[] { "EmpleadoId" }, "sales_empleado_id_foreign");

                    b.ToTable("sales", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.SaleDetail", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<long?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("cantidad")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<long?>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("precio")
                        .HasDefaultValueSql("'1'");

                    b.Property<ulong>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("producto_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<ulong>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("venta_id")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductoId" }, "sale_details_producto_id_foreign");

                    b.HasIndex(new[] { "VentaId" }, "sale_details_venta_id_foreign");

                    b.ToTable("sale_details", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Session", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime>("LoginDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("login_date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("LogoutDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("logout_date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<ulong?>("UserId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "sessions_user_id_foreign");

                    b.ToTable("sessions", (string)null);
                });

            modelBuilder.Entity("kadila.Models.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("ResetToken")
                        .HasColumnType("varchar(255)");

                    b.Property<ulong?>("RolId")
                        .IsRequired()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("rol_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RolId" }, "fk_rol");

                    b.HasIndex(new[] { "Email" }, "users_email_unique")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("kadila.Models.Debt", b =>
                {
                    b.HasOne("kadila.Models.Customer", "Cliente")
                        .WithMany("Debts")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("debts_cliente_id_foreign");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("kadila.Models.Lot", b =>
                {
                    b.HasOne("kadila.Models.Product", "Producto")
                        .WithMany("Lots")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("lots_producto_id_foreign");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("kadila.Models.PaymentHistory", b =>
                {
                    b.HasOne("kadila.Models.Debt", "Deuda")
                        .WithMany("PaymentHistories")
                        .HasForeignKey("DeudaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("payment_histories_deuda_id_foreign");

                    b.Navigation("Deuda");
                });

            modelBuilder.Entity("kadila.Models.Sale", b =>
                {
                    b.HasOne("kadila.Models.Customer", "Cliente")
                        .WithMany("Sales")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sales_cliente_id_foreign");

                    b.HasOne("kadila.Models.Debt", "Deuda")
                        .WithMany("Sales")
                        .HasForeignKey("DeudaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sales_deuda_id_foreign");

                    b.HasOne("kadila.Models.User", "Empleado")
                        .WithMany("Sales")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sales_empleado_id_foreign");

                    b.Navigation("Cliente");

                    b.Navigation("Deuda");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("kadila.Models.SaleDetail", b =>
                {
                    b.HasOne("kadila.Models.Product", "Producto")
                        .WithMany("SaleDetails")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sale_details_producto_id_foreign");

                    b.HasOne("kadila.Models.Sale", "Venta")
                        .WithMany("SaleDetails")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sale_details_venta_id_foreign");

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("kadila.Models.Session", b =>
                {
                    b.HasOne("kadila.Models.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("sessions_user_id_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("kadila.Models.User", b =>
                {
                    b.HasOne("kadila.Models.Role", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rol");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("kadila.Models.Customer", b =>
                {
                    b.Navigation("Debts");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("kadila.Models.Debt", b =>
                {
                    b.Navigation("PaymentHistories");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("kadila.Models.Product", b =>
                {
                    b.Navigation("Lots");

                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("kadila.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("kadila.Models.Sale", b =>
                {
                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("kadila.Models.User", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
